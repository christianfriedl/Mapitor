/*
 * this will be able to paint a text node on a paper
 */

"use strict";

var m_map = require('map.js');
var m_textNode = require('node/textNode.js');

function TextNodePainter(/* m_textNode.TextNode */ p_node, /* Raphael */ p_paper) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_textNode.TextNode) ) { throw new Error('type error: param p_map should be of type m_map.Map'); }
        /* @DEVELOPMENT } */
        this._node = p_node;
        this._paper = p_paper;
    }
}

function textNodePainter(/* m_textNode.TextNode */ p_node, /* Raphael */ p_paper) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_textNode.TextNode) ) { throw new Error('type error: param p_node should be of type m_textNode.TextNode'); }
        /* @DEVELOPMENT } */
        return new TextNodePainter(p_node, p_paper);
    }
}


TextNodePainter.prototype.constructor = TextNodePainter;

TextNodePainter.prototype.paint = function() {
    var t = this._paper.text(this._node.x(), this._node.y(), this._node.text());
    t.attr({ 'stroke': '#000', 'fill': '#000', 'font-size': '16px', 'text-anchor': 'start' });
};

exports.TextNodePainter = TextNodePainter;
exports.textNodePainter = textNodePainter;
