/*
 * this will be able to paint an area and its subnodes on a paper
 */

"use strict";

var m_map = require('map.js');
var m_area = require('node/area.js');
var m_nodePainter = require('painter/nodePainter.js');
var m_painterFactory = require('painter/painterFactory.js');

function AreaPainter(/* m_area.Area */ p_node, /* Raphael */ p_paper) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_area.Area) ) { throw new Error('type error: param p_map should be of type m_area.Area'); }
        /* @DEVELOPMENT } */
        m_nodePainter.NodePainter.call(this, p_node, p_paper);
    }
}

function areaPainter(/* m_area.Area */ p_node, /* Raphael */ p_paper) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_area.Area) ) { throw new Error('type error: param p_node should be of type m_area.Area'); }
        /* @DEVELOPMENT } */
        return new AreaPainter(p_node, p_paper);
    } else {
        return new AreaPainter();
    }
}


AreaPainter.prototype = new m_nodePainter.NodePainter();
AreaPainter.prototype.constructor = AreaPainter;

AreaPainter.prototype.paint = function() {
    console.log('areapainter paint recting: ', this._node);
    if ( this._r === undefined ) {
        this._r = this._paper.rect(this._node.x(), this._node.y(), this._node.width(), this._node.height());
    }
    this._r.attr({ 'stroke': '#ccc', 'fill': '#fff', 'fill-opacity': 0 });
    _(this._node.nodes()).each(function(n) {
        var pf = m_painterFactory.painterFactory(this._node.map(), this._paper);
        pf.forObject(n).paint();
    }.bind(this));
};

exports.AreaPainter = AreaPainter;
exports.areaPainter = areaPainter;
