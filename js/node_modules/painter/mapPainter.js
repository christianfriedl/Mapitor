/*
 * this will be able to paint a whole map on a paper
 */

"use strict";

var _ = require('underscore');

var m_map = require('map.js');

function MapPainter(/* m_map.Map */ p_map, /* Raphael */ p_paper) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_map; if ( !(PARAM instanceof m_map.Map) ) { throw new Error('type error: param p_map should be of type m_map.Map'); }
        /* @DEVELOPMENT } */

        this._map = p_map;
        this._paper = p_paper;
    }
}


function mapPainter(/* m_map.Map */ p_map, /* Raphael */ p_paper) {
    // this._paper = Raphael(this._parent, this.domWidth(), this.domHeight());
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_map; if ( !(PARAM instanceof m_map.Map) ) { throw new Error('type error: param p_map should be of type m_map.Map'); }
        /* @DEVELOPMENT } */

        return new MapPainter(p_map, p_paper);
    } else {
        return new MapPainter();
    }
}

MapPainter.prototype.constructor = MapPainter;

MapPainter.prototype.paint = function() {
    var m_painterFactory = require('painter/painterFactory.js');
    var painter = m_painterFactory.painterFactory(this._paper).forObject(this._map.area());
    console.log('mappainter has painter:', painter);
    painter.paint();
};

exports.MapPainter = MapPainter;
exports.mapPainter = mapPainter;
