/*
 * this will be able to paint a whole map on a paper
 */

"use strict";

var m_map = require('map.js');

function MapPainter(/* m_map.Map */ p_map, /* Raphael */ p_paper) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== X ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + X); }
            var PARAM = p_map; if ( !(PARAM instanceof m_map.Map) ) { throw new Error('type error: param p_map should be of type m_map.Map'); }
        /* @DEVELOPMENT } */

        // TODO implement stuff
    }
}


function mapPainter(/* m_map.Map */ p_map, /* Raphael */ p_paper) {
    // this._paper = Raphael(this._parent, this.domWidth(), this.domHeight());
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== X ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + X); }
            var PARAM = p_map; if ( !(PARAM instanceof m_map.Map) ) { throw new Error('type error: param p_map should be of type m_map.Map'); }
        /* @DEVELOPMENT } */

        return new MapPainter(p_map, p_paper);
    } else {
        return new MapPainter();
    }
}

MapPainter.prototype.constructor = MapPainter;

MapPainter.prototype.paint = function() {
    throw new Error('unimplemented');
};
