/*
 * Copyright (C) 2015 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of Mapitor.
 *
 * Mapitor is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 *
 */

"use strict";

var m_node = require('node/node.js');
var m_nodeWidget = require('widget/nodeWidget.js');

function NodePainter(/* m_nodeWidget.NodeWidget */ p_widget, /* Raphael */ p_paper, /* dom el */ p_div) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 3; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_widget; if ( !(PARAM instanceof m_nodeWidget.NodeWidget) ) { throw new Error('type error: param p_widget should be of type m_areaWidget.AreaWidget'); }
        /* @DEVELOPMENT } */

        this._node = p_widget.model();
        this._paper = p_paper;
        this._div = p_div;
        this._widget = p_widget;
        this._node = p_widget.node();
    }
}

function nodePainter(/* m_nodeWidget.NodeWidget */ p_widget, /* Raphael */ p_paper, /* dom el */ p_div) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 3; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_widget; if ( !(PARAM instanceof m_areaWidget.AreaWidget) ) { throw new Error('type error: param p_widget should be of type m_areaWidget.AreaWidget'); }
        /* @DEVELOPMENT } */

        return new NodePainter(p_widget, p_paper, p_div);
    } else {
        return new NodePainter();
    }
}

NodePainter.prototype.constructor = NodePainter;

NodePainter.prototype.node = function(/* m_node.Node */ p_node) {
    if ( typeof(p_node) !== 'undefined' ) {
        this._node = p_node;
        this._widget = this._node.map().widget(p_node);
        return this;
    }
    return this._node;
};

NodePainter.prototype.widget = function(/* m_nodeWidget.NodeWidget */ p_widget) {
    if ( typeof(p_widget) !== 'undefined' ) {
        this._widget = p_widget;
        this._node = p_widget.node();
        return this;
    }
    return this._widget;
};

exports.NodePainter = NodePainter;
exports.nodePainter = nodePainter;
