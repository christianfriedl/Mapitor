"use strict";

var m_node = require('node/node.js');

function NodePainter(/* m_node.Node */ p_node, /* Raphael */ p_paper) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_node.Node) ) { throw new Error('type error: param p_node should be of type m_node.Node'); }
        /* @DEVELOPMENT } */

        this._node = p_node;
        this._paper = p_paper;
    }
}

function nodePainter(/* m_node.Node */ p_node, /* Raphael */ p_paper) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 2; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_node.Node) ) { throw new Error('type error: param p_node should be of type m_node.Node'); }
        /* @DEVELOPMENT } */

        return new NodePainter(p_node, p_paper);
    } else {
        return new NodePainter();
    }
}

NodePainter.prototype.constructor = NodePainter;

NodePainter.prototype.node = function(/* m_node.Node */ p_node) {
    if ( typeof(p_node) !== 'undefined' ) {
        this._node = p_node;
        return this;
    }
    return this._node;
};

exports.NodePainter = NodePainter;
exports.nodePainter = nodePainter;
