/*
 * Copyright (C) 2015 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of Mapitor.
 *
 * Mapitor is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public Licens
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-
 *
 */

"use strict";

var m_node = require('node/node.js');
var m_nodeWidget = require('widget/nodeWidget.js');
var m_vector = require('vector.js');

function ArrowWidget(/* m_node.Node */ p_model, /* { int x1, int y1, int x2, int y2 } */ p_options) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var ARGLEN = 2; if ( arguments.length !== ARGLEN ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + ARGLEN); } 
            var PARAM = p_model; if ( !(PARAM instanceof m_node.Node) ) { throw new Error('typecheck failed on p_model: ' + PARAM); } 
        /* @DEVELOMPENT } */

        m_nodeWidget.NodeWidget.call(this, p_model, p_options);
        this._x1 = p_options.x1;
        this._y1 = p_options.y1;
        this._x2 = p_options.x2;
        this._y2 = p_options.y2;
    } else {
        m_nodeWidget.NodeWidget.call(this);
    }
}

function arrowWidget(/* m_node.Node */ p_model, /* { int x1, int y1, int x2, int y2 } */ p_options) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var ARGLEN = 2; if ( arguments.length !== ARGLEN ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + ARGLEN); } 
            var PARAM = p_model; if ( !(PARAM instanceof m_node.Node) ) { throw new Error('typecheck failed on p_model: ' + PARAM); } 
        /* @DEVELOMPENT } */

        return new ArrowWidget(p_model, p_options);
    } else {
        return new ArrowWidget();
    }
}

ArrowWidget.prototype = new m_nodeWidget.NodeWidget();
ArrowWidget.prototype.constructor = ArrowWidget;

ArrowWidget.prototype.x1 = function(/* number */ p_x1) {
    if ( typeof(p_x1) !== 'undefined' ) {
        this._x1 = p_x1;
        return this;
    }
    return this._x1;
};

ArrowWidget.prototype.y1 = function(/* number */ p_y1) {
    if ( typeof(p_y1) !== 'undefined' ) {
        this._y1 = p_y1;
        return this;
    }
    return this._y1;
};

ArrowWidget.prototype.x2 = function(/* number */ p_x2) {
    if ( typeof(p_x2) !== 'undefined' ) {
        this._x2 = p_x2;
        return this;
    }
    return this._x2;
};

ArrowWidget.prototype.y2 = function(/* number */ p_y2) {
    if ( typeof(p_y2) !== 'undefined' ) {
        this._y2 = p_y2;
        return this;
    }
    return this._y2;
};

ArrowWidget.prototype.vector = function() {
    return m_vector.vector(this._x2, this._y2).minus(m_vector.vector(this._x1, this._y1));
};

ArrowWidget.prototype.sourceVector = function() {
    return m_vector.vector(this._x1, this._y1);
};

ArrowWidget.prototype.targetVector = function() {
    return m_vector.vector(this._x2, this._y2);
};

exports.ArrowWidget = ArrowWidget;
exports.arrowWidget = arrowWidget;
