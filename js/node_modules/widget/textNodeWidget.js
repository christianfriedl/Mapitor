/*
 * Copyright (C) 2015 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of Mapitor.
 *
 * Mapitor is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public Licens
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-
 *
 */

"use strict";

var m_node = require('node/node.js');
var m_nodeWidget = require('widget/nodeWidget.js');
var m_vector = require('vector.js');

function TextNodeWidget(/* m_node.Node */ p_model, /* { ... } */ p_options) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var ARGLEN = 2; if ( arguments.length !== ARGLEN ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + ARGLEN); } 
            var PARAM = p_model; if ( !(PARAM instanceof m_node.Node) ) { throw new Error('typecheck failed on p_model: ' + PARAM); } 
        /* @DEVELOMPENT } */

        m_nodeWidget.NodeWidget.call(this, p_model, p_options);
    } else {
        m_nodeWidget.NodeWidget.call(this);
    }
}

function textNodeWidget(/* m_node.Node */ p_model, /* { ... } */ p_options) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var ARGLEN = 2; if ( arguments.length !== ARGLEN ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + ARGLEN); } 
            var PARAM = p_model; if ( !(PARAM instanceof m_node.Node) ) { throw new Error('typecheck failed on p_model: ' + PARAM); } 
        /* @DEVELOMPENT } */

        return new TextNodeWidget(p_model, p_options);
    } else {
        return new TextNodeWidget();
    }
}

TextNodeWidget.prototype = new m_nodeWidget.NodeWidget();
TextNodeWidget.prototype.constructor = TextNodeWidget;

exports.TextNodeWidget = TextNodeWidget;
exports.textNodeWidget = textNodeWidget;
