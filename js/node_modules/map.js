"use strict";

var m_node = require('node/node.js');
var m_area = require('node/area.js');
var m_areaLayouter = require('layouter/areaLayouter.js');

function Map() {
    /* @DEVELOPMENT { */
         var LEN = 0; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
    /* @DEVELOPMENT } */
    this._width = 256;
    this._height = 256;
    this._painters = {}; // map<node-id, painter>
    this._layouters = {}; // map<node-id, layouter>
    this._area = m_area.area(this, null, { x: 2, y: 2, width: this._width - 4, height: this._height - 4} );
}

function map() {
    /* @DEVELOPMENT { */
         var LEN = 0; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
    /* @DEVELOPMENT } */
    return new Map();
}


Map.prototype.constructor = Map;

/* m_area.Area */ Map.prototype.area = function() {
    console.log('map returns area', this._area);
    return this._area;
}

/* this */ Map.prototype.addPainter = function(/* Painter */ p_painter) {
    console.log('map: adding painter for node', p_painter.node().id(), '=', p_painter);
    this._painters[p_painter.node().id()] = p_painter;
    return this;
};

/* Painter|undefined */ Map.prototype.painter = function(/* m_node.Node */ p_node) {
    console.log('map: painter for node', p_node.id(), '=', this._painters[p_node.id()]);
    return this._painters[p_node.id()];
};

/* this */ Map.prototype.layout = function() {
    var layouter = m_areaLayouter.areaLayouter(this._area);
    layouter.layout();


    return this;
};

/* this */ Map.prototype.addLayouter = function(/* Layouter */ p_layouter) {
    console.log('map: adding layouter for node', p_layouter.node().id(), '=', p_layouter);
    this._layouters[p_layouter.node().id()] = p_layouter;
    return this;
};

/* Layouter|undefined */ Map.prototype.layouter = function(/* m_node.Node */ p_node) {
    console.log('map: layouter for node', p_node.id(), '=', this._layouters[p_node.id()]);
    return this._layouters[p_node.id()];
};

exports.Map = Map;
exports.map = map;
