"use strict";

var m_map = require('map.js');
var m_nodeLayouter = require('layouter/nodeLayouter.js');
var m_textNode = require('node/textNode.js');

function TextNodeLayouter(/* m_textNode.TextNode */ p_node) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 1; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_textNode.TextNode) ) { throw new Error('type error: param p_map should be of type m_map.Map'); }
        /* @DEVELOPMENT } */

        m_nodeLayouter.NodeLayouter.call(this, p_node);
    }
}

function textNodeLayouter(/* m_textNode.TextNode */ p_node) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 1; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_textNode.TextNode) ) { throw new Error('type error: param p_node should be of type m_textNode.TextNode'); }
        /* @DEVELOPMENT } */

        return new TextNodeLayouter(p_node);
    } else {
        return new TextNodeLayouter();
    }
}


TextNodeLayouter.prototype = new m_nodeLayouter.NodeLayouter();
TextNodeLayouter.prototype.constructor = TextNodeLayouter;

TextNodeLayouter.prototype.layout = function() {
    this._node.x(this._node.preferredX());
    this._node.y(this._node.preferredY());

    this._node.resize(this._node.text().length * 3, 15);
};

exports.TextNodeLayouter = TextNodeLayouter;
exports.textNodeLayouter = textNodeLayouter;
