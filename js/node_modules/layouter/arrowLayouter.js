/*
 * Copyright (C) 2015 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of Mapitor.
 *
 * Mapitor is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public Licens
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-
 *
 */

"use strict";

/* 
 * layouter for arrow
 */

var m_map = require('map.js');
var m_arrow = require('node/arrow.js');
var m_nodeLayouter = require('layouter/nodeLayouter.js');
var m_layouterFactory = require('layouter/layouterFactory.js');
var m_painterFactory = require('painter/painterFactory.js');
var m_textNode = require('node/textNode.js');
var m_trig = require('trigonometry.js');

function ArrowLayouter(/* m_arrow.Arrow */ p_node) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 1; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_arrow.Arrow) ) { throw new Error('type error: param p_map should be of type m_arrow.Arrow'); }
        /* @DEVELOPMENT } */
        m_nodeLayouter.NodeLayouter.call(this, p_node);
        this._seenNodes = [];
    }
}

function arrowLayouter(/* m_arrow.Arrow */ p_node) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 1; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_arrow.Arrow) ) { throw new Error('type error: param p_node should be of type m_arrow.Arrow'); }
        /* @DEVELOPMENT } */
        return new ArrowLayouter(p_node);
    } else {
        return new ArrowLayouter();
    }
}


ArrowLayouter.prototype = new m_nodeLayouter.NodeLayouter();
ArrowLayouter.prototype.constructor = ArrowLayouter;

ArrowLayouter.prototype.layout = function() {
    var pf = m_painterFactory.painterFactory(this._node.map(), window.mapitor.ui.paper());
    var bBox = pf.forObject(this._node.sourceNode()).bBox();
    var sourceCenter = m_trig.centerOfRectangle(bBox.x, bBox.y, bBox.x2, bBox.y2);
    bBox = pf.forObject(this._node.targetNode()).bBox();
    var targetCenter = m_trig.centerOfRectangle(bBox.x, bBox.y, bBox.x2, bBox.y2);

    var arrow = this._node;

    arrow.x1(sourceCenter.x);
    arrow.y1(sourceCenter.y);
    arrow.x2(targetCenter.x);
    arrow.y2(targetCenter.y);
};

exports.ArrowLayouter = ArrowLayouter;
exports.arrowLayouter = arrowLayouter;
