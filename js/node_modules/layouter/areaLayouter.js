"use strict";

var m_map = require('map.js');
var m_area = require('node/area.js');
var m_nodeLayouter = require('layouter/nodeLayouter.js');
var m_layouterFactory = require('layouter/layouterFactory.js');

function AreaLayouter(/* m_area.Area */ p_node) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 1; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_area.Area) ) { throw new Error('type error: param p_map should be of type m_area.Area'); }
        /* @DEVELOPMENT } */
        m_nodeLayouter.NodeLayouter.call(this, p_node);
    }
}

function areaLayouter(/* m_area.Area */ p_node) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var LEN = 1; if ( arguments.length !== LEN ) { throw new Error('arguments length is ' + arguments.length + ', should be ' + LEN); }
            var PARAM = p_node; if ( !(PARAM instanceof m_area.Area) ) { throw new Error('type error: param p_node should be of type m_area.Area'); }
        /* @DEVELOPMENT } */
        return new AreaLayouter(p_node);
    } else {
        return new AreaLayouter();
    }
}


AreaLayouter.prototype = new m_nodeLayouter.NodeLayouter();
AreaLayouter.prototype.constructor = AreaLayouter;

AreaLayouter.prototype.layout = function() {
    var lf = m_layouterFactory.layouterFactory(this._node.map());
    console.log('arealayouter layouting', this);
    _(this._node.nodes()).each(function(n) {
        lf.forObject(n).layout();
    }.bind(this));
};

exports.AreaLayouter = AreaLayouter;
exports.areaLayouter = areaLayouter;
