/*
 * undoable command to delete a node
 * @TODO possible error when deleting top area
 */

"use strict";

var m_map = require('map.js');
var m_command = require('command/command.js');
var m_textNode = require('node/textNode.js');
var m_arrow = require('node/arrow.js');

function DeleteNodeCommand(/* m_map.Map */ p_map) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var ARGLEN = 1; if ( arguments.length !== ARGLEN ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + ARGLEN); } 
            var PARAM = p_map; if ( !(PARAM instanceof m_map.Map) ) { throw new Error('typecheck failed on p_map:' + p_map); } 
        /* @DEVELOMPENT } */
        m_command.Command.call(this, p_map);
    } else {
        m_command.Command.call(this);
    }
};

function deleteNodeCommand(/* m_map.Map */ p_map) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var ARGLEN = 1; if ( arguments.length !== ARGLEN ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + ARGLEN); } 
            var PARAM = p_map; if ( !(PARAM instanceof m_map.Map) ) { throw new Error('typecheck failed on p_map:' + p_map); } 
        /* @DEVELOMPENT } */
        return new DeleteNodeCommand(p_map);
    } else {
        return new DeleteNodeCommand();
    }
};

DeleteNodeCommand.prototype = new m_command.Command();
DeleteNodeCommand.prototype.constructor = DeleteNodeCommand;

DeleteNodeCommand.prototype.run = function() {
    if ( this._map.focusedNode() !== this._map.centeredNode() ) {
        this._map.focusedNode().delete();
        // @TODO since we're never explicitly deleting a node, will we cause some kind of memleak? can we optimize this further?
        this._map.focusedNode(this._map.centeredNode()); // @TODO, this is not quite right
    }
};

DeleteNodeCommand.prototype.undo = function() {
    throw new Error('not yet implemented');
};

exports.DeleteNodeCommand = DeleteNodeCommand;
exports.deleteNodeCommand = deleteNodeCommand;

