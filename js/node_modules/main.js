/*
 * Copyright (C) 2015 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of Mapitor.
 *
 * Mapitor is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 *
 */

"use strict";

var $ = require('jquery');
var Raphael = require('raphael');
var _ = require('underscore');
var m_map = require('map.js');
var m_ui = require('ui/UI.js');
var TEST = true;

var observe;
if (window.attachEvent) {
    observe = function (element, event, handler) {
        element.attachEvent('on'+event, handler);
    };
}
else {
    observe = function (element, event, handler) {
        element.addEventListener(event, handler, false);
    };
}
function initAutoResize (cssId) {
    var text = document.getElementById(cssId);
    function resize () {
        text.style.height = 'auto';
        text.style.height = text.scrollHeight+'px';
    }
    /* 0-timeout to get the already changed text */
    function delayedResize () {
        window.setTimeout(resize, 0);
    }
    observe(text, 'change',  resize);
    observe(text, 'cut',     delayedResize);
    observe(text, 'paste',   delayedResize);
    observe(text, 'drop',    delayedResize);
    observe(text, 'keydown', delayedResize);

    text.focus();
    text.select();
    resize();
}

$(document).ready(function() {
    var map = m_map.map();
    window.mapitor = {
        ui: m_ui.ui(document.getElementById('mapparent'), map),
        map: map
    };
    console.log('setting apper: ', mapitor.ui.paper());
    map.painterFactory().paper(mapitor.ui.paper());
    map.painterFactory().div(mapitor.ui.parent());
    map.widget(map.area())._paper = mapitor.ui.paper(); // TODO
    map.painter(map.area())._paper = mapitor.ui.paper(); // TODO
    Raphael.prototype.line = function(x1, y1, x2, y2) { return this.path(['M' + x1, y1, 'L' + x2, y2].join(' ')); };
    Raphael.prototype.pathForLine = function(x1, y1, x2, y2) { return ['M' + x1, y1, 'L' + x2, y2].join(' '); };

    window.mapitor.map.resize(window.mapitor.ui.domWidth(), window.mapitor.ui.domHeight());
    initAutoResize('textnode-editor');

    if ( TEST ) {
        window.mapitor.ui.doTest();
        window.mapitor.ui.run();
    } else {
        window.mapitor.ui.run();
    }
});
