var m_map = require('map.js');
var m_node = require('node.js');

function Node(/* m_map.Map */ p_map, /* m_node.Node */ p_parent, /* { int x, int y } */ p_options) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var PARAM = p_map; if ( !(PARAM instanceof m_map.Map) ) { throw new Error('type error: param p_map should be of type m_map.Map'); }
            var PARAM = p_parent; if ( !(PARAM === null || PARAM instanceof m_node.Node) ) { throw new Error('type error: param p_parent should be of type m_node.Node'); }
        /* @DEVELOPMENT } */
        this._map = p_map;
        this._parent = p_parent;
        this._x = p_options.x;
        this._y = p_options.y;
    }
}

function node(/* m_map.Map */ p_map, /* m_node.Node */ p_parent) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var PARAM = p_map; if ( !(PARAM instanceof m_map.Map) ) { throw new Error('type error: param p_map should be of type m_map.Map'); }
            var PARAM = p_parent; if ( !(PARAM === null || PARAM instanceof m_node.Node) ) { throw new Error('type error: param p_parent should be of type m_node.Node'); }
        /* @DEVELOPMENT } */
        return new Node(p_map);
    } else {
        return new Node();
    }
}

Node.prototype.constructor = Node;

Node.prototype.map = function(/* m_map.Map */ p_map) {
    if ( typeof(p_map) !== 'undefined' ) {
        this._map = p_map;
        return this;
    }
    return this._map;
};

Node.prototype.parent = function(/* m_node.Node */ p_parent) {
    if ( typeof(p_parent) !== 'undefined' ) {
        this._parent = p_parent;
        return this;
    }
    return this._parent;
};

exports.Node = Node;
exports.node = node;
